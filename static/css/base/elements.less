/*---------------------------------------------------
    LESS Elements 0.9
  ---------------------------------------------------
    A set of useful LESS mixins
    More info at: http://lesselements.com

    REZO ZERO fork
  ---------------------------------------------------*/

/*
 * Emulate display none but keep in render to enable transitions
 */

.fake-display-none(){
  display: block;
  pointer-events: none;
  .opacity(0);
}

.fake-display-block(){
  display: block;
  pointer-events: auto;
  .opacity(1);
}

.text-ellipsis(){
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

.gradient(@color: #F5F5F5, @start: #EEE, @stop: #FFF) {
  background: @color;
  background: -webkit-gradient(linear,
                               left bottom,
                               left top,
                               color-stop(0, @start),
                               color-stop(1, @stop));
  background: -ms-linear-gradient(bottom,
                                  @start,
                                  @stop);
  background: -moz-linear-gradient(center bottom,
                                   @start 0%,
                                   @stop 100%);
  background: -o-linear-gradient(@stop,
                                 @start);
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@stop,@start));
}

.gradient-or (@origin: top, @start: #fff, @stop: #000) {
    background-color: @start;
    background-image: -webkit-linear-gradient(@origin, @start, @stop);
    background-image: -moz-linear-gradient(@origin, @start, @stop);
    background-image: -o-linear-gradient(@origin, @start, @stop);
    background-image: -ms-linear-gradient(@origin, @start, @stop);
    background-image: linear-gradient(@origin, @start, @stop);
}

.bw-gradient(@color: #F5F5F5, @start: 0, @stop: 255) {
  background: @color;
  background: -webkit-gradient(linear,
                               left bottom,
                               left top,
                               color-stop(0, rgb(@start,@start,@start)),
                               color-stop(1, rgb(@stop,@stop,@stop)));
  background: -ms-linear-gradient(bottom,
                                  rgb(@start,@start,@start) 0%,
                                  rgb(@stop,@stop,@stop) 100%);
  background: -moz-linear-gradient(center bottom,
                                   rgb(@start,@start,@start) 0%,
                                   rgb(@stop,@stop,@stop) 100%);
  background: -o-linear-gradient(rgb(@stop,@stop,@stop),
                                 rgb(@start,@start,@start));
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",rgb(@stop,@stop,@stop),rgb(@start,@start,@start)));
}

.bordered(@top-color: #EEE, @right-color: #EEE, @bottom-color: #EEE, @left-color: #EEE) {
  border-top:    solid 1px @top-color;
  border-left:   solid 1px @left-color;
  border-right:  solid 1px @right-color;
  border-bottom: solid 1px @bottom-color;
}

.drop-shadow(@x-axis: 0, @y-axis: 1px, @blur: 2px, @alpha: 0.1) {
  -webkit-box-shadow: @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
  -moz-box-shadow:    @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
  box-shadow:         @x-axis @y-axis @blur rgba(0, 0, 0, @alpha);
}

.rounded(@radius: 2px) {
  -webkit-border-radius: @radius;
  -moz-border-radius:    @radius;
  border-radius:         @radius;
  behavior: url(/PIE.htc);
}

.border-radius(@topright: 0, @bottomright: 0, @bottomleft: 0, @topleft: 0) {
  -webkit-border-top-right-radius:    @topright;
  -webkit-border-bottom-right-radius: @bottomright;
  -webkit-border-bottom-left-radius:  @bottomleft;
  -webkit-border-top-left-radius:     @topleft;
  -moz-border-radius-topright:        @topright;
  -moz-border-radius-bottomright:     @bottomright;
  -moz-border-radius-bottomleft:      @bottomleft;
  -moz-border-radius-topleft:         @topleft;
  border-top-right-radius:            @topright;
  border-bottom-right-radius:         @bottomright;
  border-bottom-left-radius:          @bottomleft;
  border-top-left-radius:             @topleft;
  .background-clip(padding-box);
  behavior: url(/PIE.htc);
}

.opacity(@opacity: 0.5) {
  -moz-opacity:    @opacity;
  -khtml-opacity:  @opacity;
  -webkit-opacity: @opacity;
  opacity:         @opacity;
  @opperc:         @opacity * 100;
  -ms-filter:      ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opperc})";
  filter:          ~"alpha(opacity=@{opperc})";
}

.opacity(@opacity: 0.5) when (@opacity = 1) {
  -moz-opacity:    @opacity;
  -khtml-opacity:  @opacity;
  -webkit-opacity: @opacity;
  opacity:         @opacity;
  -ms-filter:      none;
  filter:          none;
}

.transform(...) {
  -webkit-transform: @arguments;
  -moz-transform:    @arguments;
  -o-transform:      @arguments;
  -ms-transform:     @arguments;
  transform:         @arguments;
}

.rotation(@deg:5deg){
  .transform(rotate(@deg));
}

// .perspective(@perspective:500px){
//   .transform(perspective(@perspective));
// }

.scale(@ratio:1.5){
  .transform(scale(@ratio));
}

.transform-style(@style:preserve-3d){
  -webkit-transform-style: @style;
  -moz-transform-style: @style;
  transform-style: @style;
}

.backface-visibility(@value:hidden){
  -webkit-backface-visibility:@value;
  -moz-backface-visibility:@value;
  backface-visibility:@value;
}


/*
 * Transitions
 */
.transition(...) {
  -webkit-transition: @arguments;
  -moz-transition:    @arguments;
  -o-transition:      @arguments;
  transition:         @arguments;
}

/* BAD to transition over ALL propeties !
.transition(@duration:0.2s, @ease:ease-in-out) {
  -webkit-transition: all @duration @ease;
  -moz-transition: all @duration @ease;
  -o-transition: all @duration @ease;
  transition: all @duration @ease;
}
*/

.transition-duration(@duration: 0.2s) {
  -moz-transition-duration:    @duration;
  -webkit-transition-duration: @duration;
  -o-transition-duration:      @duration;
  transition-duration:         @duration;
}

.transition-delay(@delay: 0s) {
  -moz-transition-delay:    @delay;
  -webkit-transition-delay: @delay;
  -o-transition-delay:      @delay;
  transition-delay:         @delay;
}

.transition-property(@property: all) {
  -moz-transition-property:    @property;
  -webkit-transition-property: @property;
  -o-transition-property:      @property;
  transition-property:         @property;
}

.transition-timing-function(@ease: ease-in){
  -moz-transition-timing-function:    @ease;
  -webkit-transition-timing-function: @ease;
  -o-transition-timing-function:      @ease;
  transition-timing-function:         @ease;
}

// Enable transitions on transforms for each vendor
.transform-transition(...) {
  -moz-transition :    -moz-transform @arguments;
  -webkit-transition : -webkit-transform @arguments;
  -ms-transition :     -ms-transform @arguments;
  -o-transition :      -o-transform @arguments;
  transition :         transform @arguments;
}

.transform-origin( @x, @y ) {
  -webkit-transform-origin : @x @y;
  -ms-transform-origin :     @x @y;
  -moz-transform-origin :    @x @y;
  -o-transform-origin :      @x @y;
  transform-origin :         @x @y;
}

.inner-shadow(@horizontal:0, @vertical:1px, @blur:2px, @alpha: 0.4) {
  -webkit-box-shadow: inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
  -moz-box-shadow:    inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
  box-shadow:         inset @horizontal @vertical @blur rgba(0, 0, 0, @alpha);
}

.box-shadow(@arguments) {
  -webkit-box-shadow: @arguments;
  -moz-box-shadow:    @arguments;
  box-shadow:         @arguments;
}

.box-sizing(@sizing: border-box) {
  -ms-box-sizing:     @sizing;
  -moz-box-sizing:    @sizing;
  -webkit-box-sizing: @sizing;
  box-sizing:         @sizing;
}

.user-select(@argument: none) {
  -webkit-user-select: @argument;
  -moz-user-select:    @argument;
  -ms-user-select:     @argument;
  user-select:         @argument;
}

.columns(@colwidth: 250px, @colcount: 0, @colgap: 50px, @columnRuleColor: #EEE, @columnRuleStyle: solid, @columnRuleWidth: 1px) {
  -moz-column-width: @colwidth;
  -moz-column-count: @colcount;
  -moz-column-gap:   @colgap;
  -moz-column-rule-color: @columnRuleColor;
  -moz-column-rule-style: @columnRuleStyle;
  -moz-column-rule-width: @columnRuleWidth;
  -webkit-column-width: @colwidth;
  -webkit-column-count: @colcount;
  -webkit-column-gap:   @colgap;
  -webkit-column-rule-color: @columnRuleColor;
  -webkit-column-rule-style: @columnRuleStyle;
  -webkit-column-rule-width: @columnRuleWidth;
  column-width: @colwidth;
  column-count: @colcount;
  column-gap:   @colgap;
  column-rule-color: @columnRuleColor;
  column-rule-style: @columnRuleStyle;
  column-rule-width: @columnRuleWidth;
}

.translate(@x:0, @y:0) {
  .transform(translate(@x, @y));
}

.background-clip(@argument: padding-box) {
  -moz-background-clip:    @argument;
  -webkit-background-clip: @argument;
  background-clip:         @argument;
}

.background-size(@type:cover){
  -moz-background-size: @type;
  -webkit-background-size: @type;
  background-size: @type;
  -ms-behavior: url(/backgroundsize.min.htc);
}

.default-appearence() {
  -webkit-appearance: none;
  -moz-appearance:    none;
  -ms-appearance:     none;
  -o-appearance:      none;
  appearance:         none;
}

.keep-image-aspect(){
  image-rendering:       optimizeSpeed;             /* Legal fallback                 */
  image-rendering:       pixellated;                /* Firefox                        */
  image-rendering:       -o-crisp-edges;            /* Opera                          */
  image-rendering:       -webkit-optimize-contrast; /* Chrome (and eventually Safari) */
  image-rendering:       optimize-contrast;         /* CSS3 Proposed                  */
  -ms-interpolation-mode:nearest-neighbor;          /* IE8+ */   
}

.color-placeholder(@color) {
  &::-webkit-input-placeholder { /* WebKit browsers */
      color:@color;
  }
  &:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
      color: @color;
  }
  &::-moz-placeholder { /* Mozilla Firefox 19+ */
      color: @color;
  }
  &:-ms-input-placeholder { /* Internet Explorer 10+ */
      color: @color;
  }
}

.touch-scroll(){
  -webkit-overflow-scrolling: touch;
}

.clearfloat() {
  &:after {
    display:    block;
    content:    '.';
    height:     0;
    visibility: hidden;
    float:      none;
    clear:      both;
  }
}
